{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/typescript/source/style.less","path":"style.less","modified":0,"renderable":1},{"_id":"themes/typescript/source/fonts/icomoon.eot","path":"fonts/icomoon.eot","modified":0,"renderable":1},{"_id":"themes/typescript/source/fonts/icomoon.svg","path":"fonts/icomoon.svg","modified":0,"renderable":1},{"_id":"themes/typescript/source/fonts/icomoon.ttf","path":"fonts/icomoon.ttf","modified":0,"renderable":1},{"_id":"themes/typescript/source/fonts/icomoon.woff","path":"fonts/icomoon.woff","modified":0,"renderable":1},{"_id":"themes/typescript/source/fonts/selection.json","path":"fonts/selection.json","modified":0,"renderable":1},{"_id":"themes/typescript/source/images/algolia.svg","path":"images/algolia.svg","modified":0,"renderable":1},{"_id":"themes/typescript/source/images/azure.svg","path":"images/azure.svg","modified":0,"renderable":1},{"_id":"themes/typescript/source/images/baidu.svg","path":"images/baidu.svg","modified":0,"renderable":1},{"_id":"themes/typescript/source/images/google.svg","path":"images/google.svg","modified":0,"renderable":1},{"_id":"themes/typescript/source/images/logo.png","path":"images/logo.png","modified":0,"renderable":1},{"_id":"themes/typescript/source/images/logo.psd","path":"images/logo.psd","modified":0,"renderable":1},{"_id":"themes/typescript/source/js/app.js","path":"js/app.js","modified":0,"renderable":1},{"_id":"themes/typescript/source/js/jquery.fitvids.js","path":"js/jquery.fitvids.js","modified":0,"renderable":1},{"_id":"themes/typescript/source/js/search.js","path":"js/search.js","modified":0,"renderable":1},{"_id":"themes/typescript/source/js/jquery.min.js","path":"js/jquery.min.js","modified":0,"renderable":1},{"_id":"themes/typescript/source/images/avatar.png","path":"images/avatar.png","modified":0,"renderable":1}],"Cache":[{"_id":"themes/typescript/LICENSE","hash":"44409ab0bcd7853e2ac93faad84e57299711e6bf","modified":1477644908556},{"_id":"themes/typescript/README.md","hash":"b1aaa01fd75e54008da34b3173071b14e69cbcec","modified":1477644908556},{"_id":"themes/typescript/_config.yml","hash":"a08bd3100ef64be1d14ac665de83bc2abcf83705","modified":1477808729413},{"_id":"source/_posts/hello-world.md","hash":"8a02477044e2b77f1b262da2c48c01429e4a32e4","modified":1474369968382},{"_id":"source/_posts/neutron-code.md","hash":"05f40c760871532153a19813644c0f120b187811","modified":1477647362468},{"_id":"themes/typescript/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1477644908546},{"_id":"themes/typescript/.git/config","hash":"270eee2244a90ec7edc970fa633badaec78fb9c7","modified":1477644908546},{"_id":"themes/typescript/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1477644903510},{"_id":"themes/typescript/.git/index","hash":"341c298275da1d5df787aa243ac778b6fe577a3b","modified":1477645040304},{"_id":"themes/typescript/.git/packed-refs","hash":"17d1ec68d890f0801221fb76268906ff251e2cc2","modified":1477644908536},{"_id":"themes/typescript/layout/archive.ejs","hash":"3bfe8941632e008532d96b45a4e959ba433be761","modified":1477644908566},{"_id":"themes/typescript/layout/category.ejs","hash":"c97be36b33bb44957778587f00c978f2d28016f8","modified":1477644908566},{"_id":"themes/typescript/layout/index.ejs","hash":"c97be36b33bb44957778587f00c978f2d28016f8","modified":1477644908566},{"_id":"themes/typescript/layout/layout.ejs","hash":"5613c1e524e534b8b0386914785d6553a0790f4e","modified":1477644908566},{"_id":"themes/typescript/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1477644908566},{"_id":"themes/typescript/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1477644908566},{"_id":"themes/typescript/layout/tag.ejs","hash":"c97be36b33bb44957778587f00c978f2d28016f8","modified":1477644908566},{"_id":"themes/typescript/source/style.less","hash":"006a22465cf3b52f67a07a89701a8edacb6ae5e1","modified":1477812631186},{"_id":"themes/typescript/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1477644903506},{"_id":"themes/typescript/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1477644903506},{"_id":"themes/typescript/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1477644903506},{"_id":"themes/typescript/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1477644903506},{"_id":"themes/typescript/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1477644903506},{"_id":"themes/typescript/.git/hooks/pre-rebase.sample","hash":"5885a56ab4fca8075a05a562d005e922cde9853b","modified":1477644903510},{"_id":"themes/typescript/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1477644903510},{"_id":"themes/typescript/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1477644903510},{"_id":"themes/typescript/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1477644903510},{"_id":"themes/typescript/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1477644903510},{"_id":"themes/typescript/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1477644903510},{"_id":"themes/typescript/.git/logs/HEAD","hash":"87c13543ee5d6f011ab653d271bbdf9d75ae5678","modified":1477644908546},{"_id":"themes/typescript/layout/_partial/archive.ejs","hash":"f18afc2e02370ff497731f20d325bda4e4d1eae6","modified":1477644908566},{"_id":"themes/typescript/layout/_partial/article.ejs","hash":"9049ca545b09111d9d6fd52ab3b2bf20461c941f","modified":1477644908566},{"_id":"themes/typescript/layout/_partial/footer.ejs","hash":"ee82533ab00b77e109776264ef9a6ad08b780fe7","modified":1477644908566},{"_id":"themes/typescript/layout/_partial/head.ejs","hash":"2a35818cf9a45713fa9a97531fa976cfb48d4789","modified":1477814559937},{"_id":"themes/typescript/layout/_partial/header.ejs","hash":"6a8cf2aa14f0fd56b593961a16c4a2f735bb82d0","modified":1477646850291},{"_id":"themes/typescript/layout/_partial/loading.ejs","hash":"b35b050cf7cd62d4c291b509e67aff08e1827e78","modified":1477644908566},{"_id":"themes/typescript/layout/_partial/post.ejs","hash":"ce90735a42277bfa566985be55cf7317faaea132","modified":1477644908566},{"_id":"themes/typescript/layout/_partial/scripts.ejs","hash":"09ec672d19f8e4c617289743b79349f38496c81a","modified":1477644908566},{"_id":"themes/typescript/source/fonts/icomoon.eot","hash":"09e365cb1dfa85a63d0841b69c30020cff621dad","modified":1477644908566},{"_id":"themes/typescript/source/fonts/icomoon.svg","hash":"f3efaca04d1f812242163713838f30147abab693","modified":1477644908570},{"_id":"themes/typescript/source/fonts/icomoon.ttf","hash":"db33ccce951a88b6a08f147363ace84d20db93ae","modified":1477644908570},{"_id":"themes/typescript/source/fonts/icomoon.woff","hash":"c58f59e279dcc265fb43a0d8378b92064c120ce8","modified":1477644908570},{"_id":"themes/typescript/source/fonts/selection.json","hash":"498b5ba0cafb2eb5fa20f9034527eb912fa41827","modified":1477644908570},{"_id":"themes/typescript/source/images/algolia.svg","hash":"90035272fa31a3f65b3c0e2cb8a633876ef457dc","modified":1477644908570},{"_id":"themes/typescript/source/images/azure.svg","hash":"d355a126d8d47647140022f32e755d41c5708474","modified":1477644908570},{"_id":"themes/typescript/source/images/baidu.svg","hash":"c8c111d40c97e0c662b0b12849702e7207feeee5","modified":1477644908570},{"_id":"themes/typescript/source/images/google.svg","hash":"66938eaaa4ff7c21ee6b7c3c5fefbc004ee6d7c9","modified":1477644908570},{"_id":"themes/typescript/source/images/logo.png","hash":"8cb99b2b28095d6fefd2d70f9b203da89894cd7b","modified":1477644908570},{"_id":"themes/typescript/source/images/logo.psd","hash":"3b95ae5e8914af72154ece31d2a2401453decff3","modified":1477644908570},{"_id":"themes/typescript/source/js/app.js","hash":"69426ff578a138ab798b7ed24362bce3b6765723","modified":1477644908570},{"_id":"themes/typescript/source/js/jquery.fitvids.js","hash":"57946a22c79654014eb00fb548f727d302221873","modified":1477644908573},{"_id":"themes/typescript/source/less/_base.less","hash":"29f8e44da8bf07b5080eedcbfed4824230c9c3bc","modified":1477646220074},{"_id":"themes/typescript/source/less/_archive.less","hash":"cf9b8d65a572b27a17fcd017b772c273fd256179","modified":1477644908573},{"_id":"themes/typescript/source/less/_content.less","hash":"f6fd3916958f6b7a7766211df3f864445f3ff04a","modified":1477647341748},{"_id":"themes/typescript/source/less/_fonts.less","hash":"ce6108f218c1a0c3c22b2c11936063a5f29e1b32","modified":1477644908573},{"_id":"themes/typescript/source/less/_footer.less","hash":"0d6dd5bb032825d5f2a04acb2268cee1e056ed92","modified":1477647599889},{"_id":"themes/typescript/source/less/_header.less","hash":"5e2a2887587284ed0fad87ae5306131dc46913b5","modified":1477647907580},{"_id":"themes/typescript/source/less/_main.less","hash":"0211d431eda99b081789f0baab7c0a701fd53bd3","modified":1477647867527},{"_id":"themes/typescript/source/less/_normalize.less","hash":"02fe53286d071637534d5aa2c57c76c168c0d521","modified":1477644908573},{"_id":"themes/typescript/source/less/_pagination.less","hash":"aaae6df1ad64c67b552c68f1301f186e15e4dfbe","modified":1477644908573},{"_id":"themes/typescript/source/less/_search.less","hash":"785ed94dadb38c444a9d2a685bca581a86bf367d","modified":1477644908573},{"_id":"themes/typescript/demo/ghost-theme-typescript-screenshot.jpg","hash":"a112ee6b71690c52f37572a5a6093582e69d95bf","modified":1477644908563},{"_id":"themes/typescript/source/js/search.js","hash":"1fd7f5b716e36a432822c0af48f85cdb9c978f35","modified":1477644908573},{"_id":"themes/typescript/.git/objects/pack/pack-3e0cf76c6243287782e6dd8fbdd8ce847e835020.idx","hash":"4c30bad018cdd094c1597c88d6565ed0c1d2b393","modified":1477644908490},{"_id":"themes/typescript/.git/refs/heads/master","hash":"93dd59a587b75061b178c2c793bb0cbfa8e6e9fb","modified":1477644908546},{"_id":"themes/typescript/source/js/jquery.min.js","hash":"e3dbb65f2b541d842b50d37304b0102a2d5f2387","modified":1477644908573},{"_id":"themes/typescript/source/images/avatar.png","hash":"2d139540b06dd4db3a63e77708b69b64ae625594","modified":1477644908570},{"_id":"themes/typescript/demo/ghost-theme-typescript-screenshot.png","hash":"d77251051f0d783c84294f8eaac26f7650930eee","modified":1477644908563},{"_id":"themes/typescript/.git/logs/refs/heads/master","hash":"87c13543ee5d6f011ab653d271bbdf9d75ae5678","modified":1477644908546},{"_id":"themes/typescript/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1477644908546},{"_id":"themes/typescript/.git/logs/refs/remotes/origin/HEAD","hash":"87c13543ee5d6f011ab653d271bbdf9d75ae5678","modified":1477644908546},{"_id":"themes/typescript/.git/objects/pack/pack-3e0cf76c6243287782e6dd8fbdd8ce847e835020.pack","hash":"11d77c70788c8ff6acbb5d6695c68da7c118d14a","modified":1477644908490},{"_id":"public/content.json","hash":"43decc25ce17966b77c71ea62bd355d093f6b92e","modified":1477813169094},{"_id":"public/2016/09/20/hello-world/index.html","hash":"0c09869cff616372f24340e897e8be068277e9ca","modified":1477814968358},{"_id":"public/archives/index.html","hash":"f06ce62713b6e49a4e4ca4e914186be526bfc2d9","modified":1477814968359},{"_id":"public/archives/2016/index.html","hash":"db9c22cc2de54796ab26dcc97d7be6371d24bc6b","modified":1477814968359},{"_id":"public/archives/2016/09/index.html","hash":"e24b5d79ccefa59cd7fd79f6bf741cb8af81d770","modified":1477814968360},{"_id":"public/archives/2016/10/index.html","hash":"e06a52169f5bcebdf7d1e8c7cbfca63c52d07232","modified":1477814968360},{"_id":"public/index.html","hash":"cebfaf694eb78ffeeb840f15ac51d41b2c77e2ac","modified":1477814968360},{"_id":"public/tags/openstack/index.html","hash":"d123493101d5c16ac782324e03f478e74e930fe0","modified":1477814968360},{"_id":"public/tags/neutron/index.html","hash":"a80bd68a7aac17d99a6a4ea056100a41b7e85a14","modified":1477814968360},{"_id":"public/2016/10/28/neutron-code/index.html","hash":"5dfcfe1cb25adbb93f4e7ab7c388b366b1cbdd42","modified":1477814968360},{"_id":"public/fonts/icomoon.eot","hash":"09e365cb1dfa85a63d0841b69c30020cff621dad","modified":1477813169154},{"_id":"public/fonts/icomoon.svg","hash":"f3efaca04d1f812242163713838f30147abab693","modified":1477813169154},{"_id":"public/fonts/icomoon.ttf","hash":"db33ccce951a88b6a08f147363ace84d20db93ae","modified":1477813169154},{"_id":"public/fonts/icomoon.woff","hash":"c58f59e279dcc265fb43a0d8378b92064c120ce8","modified":1477813169154},{"_id":"public/images/algolia.svg","hash":"90035272fa31a3f65b3c0e2cb8a633876ef457dc","modified":1477813169154},{"_id":"public/images/azure.svg","hash":"d355a126d8d47647140022f32e755d41c5708474","modified":1477813169154},{"_id":"public/images/baidu.svg","hash":"c8c111d40c97e0c662b0b12849702e7207feeee5","modified":1477813169154},{"_id":"public/images/google.svg","hash":"66938eaaa4ff7c21ee6b7c3c5fefbc004ee6d7c9","modified":1477813169154},{"_id":"public/images/logo.png","hash":"8cb99b2b28095d6fefd2d70f9b203da89894cd7b","modified":1477813169154},{"_id":"public/images/logo.psd","hash":"3b95ae5e8914af72154ece31d2a2401453decff3","modified":1477813169154},{"_id":"public/js/app.js","hash":"69426ff578a138ab798b7ed24362bce3b6765723","modified":1477813169178},{"_id":"public/js/jquery.fitvids.js","hash":"57946a22c79654014eb00fb548f727d302221873","modified":1477813169178},{"_id":"public/fonts/selection.json","hash":"c38f13105ee7c35a67476dd80eaa2ffd037c124b","modified":1477813169178},{"_id":"public/js/search.js","hash":"1fd7f5b716e36a432822c0af48f85cdb9c978f35","modified":1477813169178},{"_id":"public/js/jquery.min.js","hash":"e3dbb65f2b541d842b50d37304b0102a2d5f2387","modified":1477813169178},{"_id":"public/images/avatar.png","hash":"2d139540b06dd4db3a63e77708b69b64ae625594","modified":1477813169178},{"_id":"public/style.css","hash":"89dd9e877236d25d211db44e0954ebc020adfc5b","modified":1477813169306},{"_id":"source/.nojekyll","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1477809199366}],"Category":[],"Data":[],"Page":[],"Post":[{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","slug":"hello-world","published":1,"date":"2016-09-20T11:12:48.382Z","updated":"2016-09-20T11:12:48.382Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciuwbsyy60000xws6gkv8y55u","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"external\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"external\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"external\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"external\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"external\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"external\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo generate</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"external\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo deploy</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"external\">Deployment</a></p>\n","excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo generate</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo deploy</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\">Deployment</a></p>\n"},{"title":"neutron源码分析","date":"2016-10-28T06:52:02.000Z","_content":"\n## WSGI\nWSGI 是一个连接服务端和应用端的接口。WSGI把Web组件分为三部分：\n- WSGI Server\n- WSGI Middleware\n- WSGI Application\n\nAn Application must return an iterable object.\n```python\ndef application(environ,start_response):\n   start_response('200 Ok',[('Content-Type','text/plain')])\n   yield 'Hello World\\n'\n```\n- `environ`:一个dict，包括CGI中定义的环境变量以及7个WSGI所定义的环境变量：wsgi.version,wsgi_input...\n- `start_response`: 回调函数，要返回一个write(data)对象，用作兼容现有的特殊框架，一般返回None\n<!--more-->\n### Paste.Deploy\nPaste Deploy通过api-paste.ini配置\nPaste配置文件分为多个section，每个section以`type`:`name`的格式命名。\n（书上P99）\n### WebOb\n对WSGI的封装，包含：\n- `webob.Request` 对WSGI的environ的封装\n- `webob.Response` 对WSGI响应的封装 \n- `webob.exc` 对HTTP错误代码的封装\n\nWebob提供了`webob.dec.wsgify`的decorator，可以快速开发application\n```python\n# 继承自webob.Request\nclass MyRequest(webob.Request): \n    @property\n    def is_local(self):\n        return self.remote_addr == '127.0.0.1'\n\n\n@wsgify(RequestClass=MyRequest) \ndef myfunc(req):\n    if req.is_local:\n        return Response('hi!')\n    else:\n        raise webob.exc.HTTPForbidden\n```\n## Eventlet\nOpenstack的协程模块\n### 协程\n与线程类似，拥有独立的栈和局部变量，但是无法同时执行，(Compare To: Javascript callback)\n### GreenThread\n```python\nimport eventlet\ndef my_func(param):\n    # do something in coroutine\n    return param\ngt = eventlet.spawn(my_func,param)\nresult = gt.wait()\n```\n`eventlet.spawn`只是创建一个协程并不立即执行，直到主线程运行到`gt.wait()`时才开始进入调度序列。\n### Monkey Path\n实现协程需要使用Patch的方式对Python的网络相关的标准库进行改写，这个patch就叫`monkey_patch`。\nMonkey Patch是大部分使用Eventlet函数库之前需要进行的初始化工作\n```python\n# ceilometer/cmd/__init__.py\nimport eventlet\n# patch socket,select,thread三个模块\neventlet.monkey_patch(socket=True,select=True,thread=True)\n```\n## Oslo\nOpenstack 通用库\n### Cliff\n构建命令行程序\nDEMO: <https://github.com/openstack/cliff/tree/master/demoapp>\n\n### oslo.config\n解析命令行和配置文件中的配置选项（书上P111）\n```python\nfrom oslo.config import cfg\nconf(sys.argv[1:],project=`xyz`) # 初始化，使得oslo.config能够正常解析配置文件和命令行选项\nrabbit_group = cfg.OptGroup(name='rabbit',\n                            title='RabbitMQ options')\n\nrabbit_host_opt = cfg.StrOpt('host',\n                             default='localhost',\n                             help='IP/hostname to listen on.'),\nrabbit_port_opt = cfg.PortOpt('port',\n                              default=5672,\n                              help='Port number to listen on.')\n\ndef register_rabbit_opts(conf):\n    conf.register_group(rabbit_group)\n    # options can be registered under a group in either of these ways:\n    conf.register_opt(rabbit_host_opt, group=rabbit_group)\n    conf.register_opt(rabbit_port_opt, group='rabbit')\n```\n如果没有指定group，则选项默认放在[DEFAULT]组下\n```ini\n# glance-api.conf:\n  [DEFAULT]\n  bind_port = 9292\n  # ...\n\n  [rabbit]\n  host = localhost\n  port = 5672\n  use_ssl = False\n  userid = guest\n  password = guest\n  virtual_host = /\n```\n从命令行中设置conf，需要使用使用‘-’连接groupname和optionname\n```shell\n--rabbit-host localhost --rabbit-port 9999\n```\n### oslo.db\nSQLAlchemy数据库模型的抽象\n### oslo.i18n\n是对Python gettext的封装，主要用于字符串翻译和国际化\n### oslo.messaging\nOpenstack各项目使用RPC和事件通知的统一的接口。\n- Transport,传输层，主要实现RPC底层的通信\n- Target，封装了指定某一消息最终目的地的所有信息","source":"_posts/neutron-code.md","raw":"---\ntitle: neutron源码分析\ndate: 2016-10-28 14:52:02\ntags: [openstack,neutron]\n---\n\n## WSGI\nWSGI 是一个连接服务端和应用端的接口。WSGI把Web组件分为三部分：\n- WSGI Server\n- WSGI Middleware\n- WSGI Application\n\nAn Application must return an iterable object.\n```python\ndef application(environ,start_response):\n   start_response('200 Ok',[('Content-Type','text/plain')])\n   yield 'Hello World\\n'\n```\n- `environ`:一个dict，包括CGI中定义的环境变量以及7个WSGI所定义的环境变量：wsgi.version,wsgi_input...\n- `start_response`: 回调函数，要返回一个write(data)对象，用作兼容现有的特殊框架，一般返回None\n<!--more-->\n### Paste.Deploy\nPaste Deploy通过api-paste.ini配置\nPaste配置文件分为多个section，每个section以`type`:`name`的格式命名。\n（书上P99）\n### WebOb\n对WSGI的封装，包含：\n- `webob.Request` 对WSGI的environ的封装\n- `webob.Response` 对WSGI响应的封装 \n- `webob.exc` 对HTTP错误代码的封装\n\nWebob提供了`webob.dec.wsgify`的decorator，可以快速开发application\n```python\n# 继承自webob.Request\nclass MyRequest(webob.Request): \n    @property\n    def is_local(self):\n        return self.remote_addr == '127.0.0.1'\n\n\n@wsgify(RequestClass=MyRequest) \ndef myfunc(req):\n    if req.is_local:\n        return Response('hi!')\n    else:\n        raise webob.exc.HTTPForbidden\n```\n## Eventlet\nOpenstack的协程模块\n### 协程\n与线程类似，拥有独立的栈和局部变量，但是无法同时执行，(Compare To: Javascript callback)\n### GreenThread\n```python\nimport eventlet\ndef my_func(param):\n    # do something in coroutine\n    return param\ngt = eventlet.spawn(my_func,param)\nresult = gt.wait()\n```\n`eventlet.spawn`只是创建一个协程并不立即执行，直到主线程运行到`gt.wait()`时才开始进入调度序列。\n### Monkey Path\n实现协程需要使用Patch的方式对Python的网络相关的标准库进行改写，这个patch就叫`monkey_patch`。\nMonkey Patch是大部分使用Eventlet函数库之前需要进行的初始化工作\n```python\n# ceilometer/cmd/__init__.py\nimport eventlet\n# patch socket,select,thread三个模块\neventlet.monkey_patch(socket=True,select=True,thread=True)\n```\n## Oslo\nOpenstack 通用库\n### Cliff\n构建命令行程序\nDEMO: <https://github.com/openstack/cliff/tree/master/demoapp>\n\n### oslo.config\n解析命令行和配置文件中的配置选项（书上P111）\n```python\nfrom oslo.config import cfg\nconf(sys.argv[1:],project=`xyz`) # 初始化，使得oslo.config能够正常解析配置文件和命令行选项\nrabbit_group = cfg.OptGroup(name='rabbit',\n                            title='RabbitMQ options')\n\nrabbit_host_opt = cfg.StrOpt('host',\n                             default='localhost',\n                             help='IP/hostname to listen on.'),\nrabbit_port_opt = cfg.PortOpt('port',\n                              default=5672,\n                              help='Port number to listen on.')\n\ndef register_rabbit_opts(conf):\n    conf.register_group(rabbit_group)\n    # options can be registered under a group in either of these ways:\n    conf.register_opt(rabbit_host_opt, group=rabbit_group)\n    conf.register_opt(rabbit_port_opt, group='rabbit')\n```\n如果没有指定group，则选项默认放在[DEFAULT]组下\n```ini\n# glance-api.conf:\n  [DEFAULT]\n  bind_port = 9292\n  # ...\n\n  [rabbit]\n  host = localhost\n  port = 5672\n  use_ssl = False\n  userid = guest\n  password = guest\n  virtual_host = /\n```\n从命令行中设置conf，需要使用使用‘-’连接groupname和optionname\n```shell\n--rabbit-host localhost --rabbit-port 9999\n```\n### oslo.db\nSQLAlchemy数据库模型的抽象\n### oslo.i18n\n是对Python gettext的封装，主要用于字符串翻译和国际化\n### oslo.messaging\nOpenstack各项目使用RPC和事件通知的统一的接口。\n- Transport,传输层，主要实现RPC底层的通信\n- Target，封装了指定某一消息最终目的地的所有信息","slug":"neutron-code","published":1,"updated":"2016-10-28T09:36:02.468Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciuwbsyya0001xws66yrzl2qi","content":"<h2 id=\"WSGI\"><a href=\"#WSGI\" class=\"headerlink\" title=\"WSGI\"></a>WSGI</h2><p>WSGI 是一个连接服务端和应用端的接口。WSGI把Web组件分为三部分：</p>\n<ul>\n<li>WSGI Server</li>\n<li>WSGI Middleware</li>\n<li>WSGI Application</li>\n</ul>\n<p>An Application must return an iterable object.<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">application</span><span class=\"params\">(environ,start_response)</span>:</span></div><div class=\"line\">   start_response(<span class=\"string\">'200 Ok'</span>,[(<span class=\"string\">'Content-Type'</span>,<span class=\"string\">'text/plain'</span>)])</div><div class=\"line\">   <span class=\"keyword\">yield</span> <span class=\"string\">'Hello World\\n'</span></div></pre></td></tr></table></figure></p>\n<ul>\n<li><code>environ</code>:一个dict，包括CGI中定义的环境变量以及7个WSGI所定义的环境变量：wsgi.version,wsgi_input…</li>\n<li><code>start_response</code>: 回调函数，要返回一个write(data)对象，用作兼容现有的特殊框架，一般返回None<a id=\"more\"></a>\n<h3 id=\"Paste-Deploy\"><a href=\"#Paste-Deploy\" class=\"headerlink\" title=\"Paste.Deploy\"></a>Paste.Deploy</h3>Paste Deploy通过api-paste.ini配置<br>Paste配置文件分为多个section，每个section以<code>type</code>:<code>name</code>的格式命名。<br>（书上P99）<h3 id=\"WebOb\"><a href=\"#WebOb\" class=\"headerlink\" title=\"WebOb\"></a>WebOb</h3>对WSGI的封装，包含：</li>\n<li><code>webob.Request</code> 对WSGI的environ的封装</li>\n<li><code>webob.Response</code> 对WSGI响应的封装 </li>\n<li><code>webob.exc</code> 对HTTP错误代码的封装</li>\n</ul>\n<p>Webob提供了<code>webob.dec.wsgify</code>的decorator，可以快速开发application<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># 继承自webob.Request</span></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyRequest</span><span class=\"params\">(webob.Request)</span>:</span> </div><div class=\"line\"><span class=\"meta\">    @property</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">is_local</span><span class=\"params\">(self)</span>:</span></div><div class=\"line\">        <span class=\"keyword\">return</span> self.remote_addr == <span class=\"string\">'127.0.0.1'</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">@wsgify(RequestClass=MyRequest) </span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">myfunc</span><span class=\"params\">(req)</span>:</span></div><div class=\"line\">    <span class=\"keyword\">if</span> req.is_local:</div><div class=\"line\">        <span class=\"keyword\">return</span> Response(<span class=\"string\">'hi!'</span>)</div><div class=\"line\">    <span class=\"keyword\">else</span>:</div><div class=\"line\">        <span class=\"keyword\">raise</span> webob.exc.HTTPForbidden</div></pre></td></tr></table></figure></p>\n<h2 id=\"Eventlet\"><a href=\"#Eventlet\" class=\"headerlink\" title=\"Eventlet\"></a>Eventlet</h2><p>Openstack的协程模块</p>\n<h3 id=\"协程\"><a href=\"#协程\" class=\"headerlink\" title=\"协程\"></a>协程</h3><p>与线程类似，拥有独立的栈和局部变量，但是无法同时执行，(Compare To: Javascript callback)</p>\n<h3 id=\"GreenThread\"><a href=\"#GreenThread\" class=\"headerlink\" title=\"GreenThread\"></a>GreenThread</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> eventlet</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">my_func</span><span class=\"params\">(param)</span>:</span></div><div class=\"line\">    <span class=\"comment\"># do something in coroutine</span></div><div class=\"line\">    <span class=\"keyword\">return</span> param</div><div class=\"line\">gt = eventlet.spawn(my_func,param)</div><div class=\"line\">result = gt.wait()</div></pre></td></tr></table></figure>\n<p><code>eventlet.spawn</code>只是创建一个协程并不立即执行，直到主线程运行到<code>gt.wait()</code>时才开始进入调度序列。</p>\n<h3 id=\"Monkey-Path\"><a href=\"#Monkey-Path\" class=\"headerlink\" title=\"Monkey Path\"></a>Monkey Path</h3><p>实现协程需要使用Patch的方式对Python的网络相关的标准库进行改写，这个patch就叫<code>monkey_patch</code>。<br>Monkey Patch是大部分使用Eventlet函数库之前需要进行的初始化工作<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># ceilometer/cmd/__init__.py</span></div><div class=\"line\"><span class=\"keyword\">import</span> eventlet</div><div class=\"line\"><span class=\"comment\"># patch socket,select,thread三个模块</span></div><div class=\"line\">eventlet.monkey_patch(socket=<span class=\"keyword\">True</span>,select=<span class=\"keyword\">True</span>,thread=<span class=\"keyword\">True</span>)</div></pre></td></tr></table></figure></p>\n<h2 id=\"Oslo\"><a href=\"#Oslo\" class=\"headerlink\" title=\"Oslo\"></a>Oslo</h2><p>Openstack 通用库</p>\n<h3 id=\"Cliff\"><a href=\"#Cliff\" class=\"headerlink\" title=\"Cliff\"></a>Cliff</h3><p>构建命令行程序<br>DEMO: <a href=\"https://github.com/openstack/cliff/tree/master/demoapp\" target=\"_blank\" rel=\"external\">https://github.com/openstack/cliff/tree/master/demoapp</a></p>\n<h3 id=\"oslo-config\"><a href=\"#oslo-config\" class=\"headerlink\" title=\"oslo.config\"></a>oslo.config</h3><p>解析命令行和配置文件中的配置选项（书上P111）<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">from</span> oslo.config <span class=\"keyword\">import</span> cfg</div><div class=\"line\">conf(sys.argv[<span class=\"number\">1</span>:],project=`xyz`) <span class=\"comment\"># 初始化，使得oslo.config能够正常解析配置文件和命令行选项</span></div><div class=\"line\">rabbit_group = cfg.OptGroup(name=<span class=\"string\">'rabbit'</span>,</div><div class=\"line\">                            title=<span class=\"string\">'RabbitMQ options'</span>)</div><div class=\"line\"></div><div class=\"line\">rabbit_host_opt = cfg.StrOpt(<span class=\"string\">'host'</span>,</div><div class=\"line\">                             default=<span class=\"string\">'localhost'</span>,</div><div class=\"line\">                             help=<span class=\"string\">'IP/hostname to listen on.'</span>),</div><div class=\"line\">rabbit_port_opt = cfg.PortOpt(<span class=\"string\">'port'</span>,</div><div class=\"line\">                              default=<span class=\"number\">5672</span>,</div><div class=\"line\">                              help=<span class=\"string\">'Port number to listen on.'</span>)</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">register_rabbit_opts</span><span class=\"params\">(conf)</span>:</span></div><div class=\"line\">    conf.register_group(rabbit_group)</div><div class=\"line\">    <span class=\"comment\"># options can be registered under a group in either of these ways:</span></div><div class=\"line\">    conf.register_opt(rabbit_host_opt, group=rabbit_group)</div><div class=\"line\">    conf.register_opt(rabbit_port_opt, group=<span class=\"string\">'rabbit'</span>)</div></pre></td></tr></table></figure></p>\n<p>如果没有指定group，则选项默认放在[DEFAULT]组下<br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"># glance-api.conf:</div><div class=\"line\">  [DEFAULT]</div><div class=\"line\">  bind_port = 9292</div><div class=\"line\">  # ...</div><div class=\"line\"></div><div class=\"line\">  [rabbit]</div><div class=\"line\">  host = localhost</div><div class=\"line\">  port = 5672</div><div class=\"line\">  use_ssl = False</div><div class=\"line\">  userid = guest</div><div class=\"line\">  password = guest</div><div class=\"line\">  virtual_host = /</div></pre></td></tr></table></figure></p>\n<p>从命令行中设置conf，需要使用使用‘-’连接groupname和optionname<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">--rabbit-host localhost --rabbit-port 9999</div></pre></td></tr></table></figure></p>\n<h3 id=\"oslo-db\"><a href=\"#oslo-db\" class=\"headerlink\" title=\"oslo.db\"></a>oslo.db</h3><p>SQLAlchemy数据库模型的抽象</p>\n<h3 id=\"oslo-i18n\"><a href=\"#oslo-i18n\" class=\"headerlink\" title=\"oslo.i18n\"></a>oslo.i18n</h3><p>是对Python gettext的封装，主要用于字符串翻译和国际化</p>\n<h3 id=\"oslo-messaging\"><a href=\"#oslo-messaging\" class=\"headerlink\" title=\"oslo.messaging\"></a>oslo.messaging</h3><p>Openstack各项目使用RPC和事件通知的统一的接口。</p>\n<ul>\n<li>Transport,传输层，主要实现RPC底层的通信</li>\n<li>Target，封装了指定某一消息最终目的地的所有信息</li>\n</ul>\n","excerpt":"<h2 id=\"WSGI\"><a href=\"#WSGI\" class=\"headerlink\" title=\"WSGI\"></a>WSGI</h2><p>WSGI 是一个连接服务端和应用端的接口。WSGI把Web组件分为三部分：</p>\n<ul>\n<li>WSGI Server</li>\n<li>WSGI Middleware</li>\n<li>WSGI Application</li>\n</ul>\n<p>An Application must return an iterable object.<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">application</span><span class=\"params\">(environ,start_response)</span>:</span></div><div class=\"line\">   start_response(<span class=\"string\">'200 Ok'</span>,[(<span class=\"string\">'Content-Type'</span>,<span class=\"string\">'text/plain'</span>)])</div><div class=\"line\">   <span class=\"keyword\">yield</span> <span class=\"string\">'Hello World\\n'</span></div></pre></td></tr></table></figure></p>\n<ul>\n<li><code>environ</code>:一个dict，包括CGI中定义的环境变量以及7个WSGI所定义的环境变量：wsgi.version,wsgi_input…</li>\n<li><code>start_response</code>: 回调函数，要返回一个write(data)对象，用作兼容现有的特殊框架，一般返回None","more":"<h3 id=\"Paste-Deploy\"><a href=\"#Paste-Deploy\" class=\"headerlink\" title=\"Paste.Deploy\"></a>Paste.Deploy</h3>Paste Deploy通过api-paste.ini配置<br>Paste配置文件分为多个section，每个section以<code>type</code>:<code>name</code>的格式命名。<br>（书上P99）<h3 id=\"WebOb\"><a href=\"#WebOb\" class=\"headerlink\" title=\"WebOb\"></a>WebOb</h3>对WSGI的封装，包含：</li>\n<li><code>webob.Request</code> 对WSGI的environ的封装</li>\n<li><code>webob.Response</code> 对WSGI响应的封装 </li>\n<li><code>webob.exc</code> 对HTTP错误代码的封装</li>\n</ul>\n<p>Webob提供了<code>webob.dec.wsgify</code>的decorator，可以快速开发application<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># 继承自webob.Request</span></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyRequest</span><span class=\"params\">(webob.Request)</span>:</span> </div><div class=\"line\"><span class=\"meta\">    @property</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">is_local</span><span class=\"params\">(self)</span>:</span></div><div class=\"line\">        <span class=\"keyword\">return</span> self.remote_addr == <span class=\"string\">'127.0.0.1'</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">@wsgify(RequestClass=MyRequest) </span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">myfunc</span><span class=\"params\">(req)</span>:</span></div><div class=\"line\">    <span class=\"keyword\">if</span> req.is_local:</div><div class=\"line\">        <span class=\"keyword\">return</span> Response(<span class=\"string\">'hi!'</span>)</div><div class=\"line\">    <span class=\"keyword\">else</span>:</div><div class=\"line\">        <span class=\"keyword\">raise</span> webob.exc.HTTPForbidden</div></pre></td></tr></table></figure></p>\n<h2 id=\"Eventlet\"><a href=\"#Eventlet\" class=\"headerlink\" title=\"Eventlet\"></a>Eventlet</h2><p>Openstack的协程模块</p>\n<h3 id=\"协程\"><a href=\"#协程\" class=\"headerlink\" title=\"协程\"></a>协程</h3><p>与线程类似，拥有独立的栈和局部变量，但是无法同时执行，(Compare To: Javascript callback)</p>\n<h3 id=\"GreenThread\"><a href=\"#GreenThread\" class=\"headerlink\" title=\"GreenThread\"></a>GreenThread</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> eventlet</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">my_func</span><span class=\"params\">(param)</span>:</span></div><div class=\"line\">    <span class=\"comment\"># do something in coroutine</span></div><div class=\"line\">    <span class=\"keyword\">return</span> param</div><div class=\"line\">gt = eventlet.spawn(my_func,param)</div><div class=\"line\">result = gt.wait()</div></pre></td></tr></table></figure>\n<p><code>eventlet.spawn</code>只是创建一个协程并不立即执行，直到主线程运行到<code>gt.wait()</code>时才开始进入调度序列。</p>\n<h3 id=\"Monkey-Path\"><a href=\"#Monkey-Path\" class=\"headerlink\" title=\"Monkey Path\"></a>Monkey Path</h3><p>实现协程需要使用Patch的方式对Python的网络相关的标准库进行改写，这个patch就叫<code>monkey_patch</code>。<br>Monkey Patch是大部分使用Eventlet函数库之前需要进行的初始化工作<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># ceilometer/cmd/__init__.py</span></div><div class=\"line\"><span class=\"keyword\">import</span> eventlet</div><div class=\"line\"><span class=\"comment\"># patch socket,select,thread三个模块</span></div><div class=\"line\">eventlet.monkey_patch(socket=<span class=\"keyword\">True</span>,select=<span class=\"keyword\">True</span>,thread=<span class=\"keyword\">True</span>)</div></pre></td></tr></table></figure></p>\n<h2 id=\"Oslo\"><a href=\"#Oslo\" class=\"headerlink\" title=\"Oslo\"></a>Oslo</h2><p>Openstack 通用库</p>\n<h3 id=\"Cliff\"><a href=\"#Cliff\" class=\"headerlink\" title=\"Cliff\"></a>Cliff</h3><p>构建命令行程序<br>DEMO: <a href=\"https://github.com/openstack/cliff/tree/master/demoapp\">https://github.com/openstack/cliff/tree/master/demoapp</a></p>\n<h3 id=\"oslo-config\"><a href=\"#oslo-config\" class=\"headerlink\" title=\"oslo.config\"></a>oslo.config</h3><p>解析命令行和配置文件中的配置选项（书上P111）<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">from</span> oslo.config <span class=\"keyword\">import</span> cfg</div><div class=\"line\">conf(sys.argv[<span class=\"number\">1</span>:],project=`xyz`) <span class=\"comment\"># 初始化，使得oslo.config能够正常解析配置文件和命令行选项</span></div><div class=\"line\">rabbit_group = cfg.OptGroup(name=<span class=\"string\">'rabbit'</span>,</div><div class=\"line\">                            title=<span class=\"string\">'RabbitMQ options'</span>)</div><div class=\"line\"></div><div class=\"line\">rabbit_host_opt = cfg.StrOpt(<span class=\"string\">'host'</span>,</div><div class=\"line\">                             default=<span class=\"string\">'localhost'</span>,</div><div class=\"line\">                             help=<span class=\"string\">'IP/hostname to listen on.'</span>),</div><div class=\"line\">rabbit_port_opt = cfg.PortOpt(<span class=\"string\">'port'</span>,</div><div class=\"line\">                              default=<span class=\"number\">5672</span>,</div><div class=\"line\">                              help=<span class=\"string\">'Port number to listen on.'</span>)</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">register_rabbit_opts</span><span class=\"params\">(conf)</span>:</span></div><div class=\"line\">    conf.register_group(rabbit_group)</div><div class=\"line\">    <span class=\"comment\"># options can be registered under a group in either of these ways:</span></div><div class=\"line\">    conf.register_opt(rabbit_host_opt, group=rabbit_group)</div><div class=\"line\">    conf.register_opt(rabbit_port_opt, group=<span class=\"string\">'rabbit'</span>)</div></pre></td></tr></table></figure></p>\n<p>如果没有指定group，则选项默认放在[DEFAULT]组下<br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"># glance-api.conf:</div><div class=\"line\">  [DEFAULT]</div><div class=\"line\">  bind_port = 9292</div><div class=\"line\">  # ...</div><div class=\"line\"></div><div class=\"line\">  [rabbit]</div><div class=\"line\">  host = localhost</div><div class=\"line\">  port = 5672</div><div class=\"line\">  use_ssl = False</div><div class=\"line\">  userid = guest</div><div class=\"line\">  password = guest</div><div class=\"line\">  virtual_host = /</div></pre></td></tr></table></figure></p>\n<p>从命令行中设置conf，需要使用使用‘-’连接groupname和optionname<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">--rabbit-host localhost --rabbit-port 9999</div></pre></td></tr></table></figure></p>\n<h3 id=\"oslo-db\"><a href=\"#oslo-db\" class=\"headerlink\" title=\"oslo.db\"></a>oslo.db</h3><p>SQLAlchemy数据库模型的抽象</p>\n<h3 id=\"oslo-i18n\"><a href=\"#oslo-i18n\" class=\"headerlink\" title=\"oslo.i18n\"></a>oslo.i18n</h3><p>是对Python gettext的封装，主要用于字符串翻译和国际化</p>\n<h3 id=\"oslo-messaging\"><a href=\"#oslo-messaging\" class=\"headerlink\" title=\"oslo.messaging\"></a>oslo.messaging</h3><p>Openstack各项目使用RPC和事件通知的统一的接口。</p>\n<ul>\n<li>Transport,传输层，主要实现RPC底层的通信</li>\n<li>Target，封装了指定某一消息最终目的地的所有信息</li>\n</ul>"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"ciuwbsyya0001xws66yrzl2qi","tag_id":"ciuwbsyyd0002xws6o0wb1v6u","_id":"ciuwbsyyh0004xws6peocdbhr"},{"post_id":"ciuwbsyya0001xws66yrzl2qi","tag_id":"ciuwbsyyg0003xws6if6ju5xo","_id":"ciuwbsyyh0005xws6gv0jt0w7"}],"Tag":[{"name":"openstack","_id":"ciuwbsyyd0002xws6o0wb1v6u"},{"name":"neutron","_id":"ciuwbsyyg0003xws6if6ju5xo"}]}}